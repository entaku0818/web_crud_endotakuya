[SQL]
findAllsql = "select * from department order by dept_id ASC"
findByIdsql  String sql = "select * from Department where dept_id = ? AND rownum = 1";
		String sql = "select * from employee order by emp_id ASC";
				String sql = "select * from employee where emp_id = ? order by emp_id ASC";
		String sql = "select * from employee where emp_name like ?";
		String sql = "select * from employee where dept_id = ?";
				String sql = "select * from employee where emp_id = ? order by emp_id ASC";
				String sql = "INSERT INTO employee (emp_id, emp_pass, emp_name, gender, address, birthday, authority, dept_id) " +
				"VALUES (SEQ_EMP.NEXTVAL, ?, ?, ?, ?, ?, ?, ?)";
		String sql = "UPDATE employee SET emp_pass = ?, emp_name = ?, gender = ?, address = ?, birthday = ?, authority = ?, dept_id = ? WHERE emp_id = ?";
		String sql = "DELETE FROM employee WHERE emp_id = ?";



[Database]
conn = DriverManager.getConnection(
                    "jdbc:oracle:thin:@localhost:1521:XE",
                    "web_crud_user", "systemsss");
            Class.forName("oracle.jdbc.driver.OracleDriver");



[Database Table]
        	emp.setEmpId(rs.getInt("emp_id"));
        	emp.setEmpPass(rs.getString("emp_pass"));
        	emp.setEmpName(rs.getString("emp_name"));
        	emp.setGender(rs.getInt("gender"));
        	emp.setAddress(rs.getString("address"));
        	emp.setBirthday(rs.getDate("birthday"));
        	emp.setAuthority(rs.getInt("authority"));
        	emp.setDeptId(rs.getInt("dept_id"));

        	dept.setDeptId(rs.getInt("dept_id"));
        	dept.setDeptName(rs.getString("dept_name"));



[SessionInfo]
        if(session.getAttribute("id") == null){

        	String errorMessage = "セッションが切断されました。再度ログインしてください。";
        	request.setAttribute("errorMessage", errorMessage);

       authority = (Integer) session.getAttribute("authority");

        if(authority != 2){

        	String errorMessage = "管理者以外のユーザーのため、操作を実行できません";
        	            res.sendRedirect( req.getContextPath() + "/employee/top.do" );



[ErrorMessage]


[Find]
				if(findColumn.equals("empId")){
					empEntity = empDao.findAllById(topForm.getFindId());
				}else if(findColumn.equals("empName")){
					empEntity = empDao.findAllByName(topForm.getFindName());
				}else if(findColumn.equals("deptName")){
					empEntity = empDao.findAllByDeptId(topForm.getFindDeptId());
				}
	private String getAuthorityName(int authority) {

		if(authority == 1){
			return "一般";
		}else if(authority == 2){
			return "管理";
		}

		return null;
	}

	private String getGenderName(int gender) {

		if(gender == 1){
			return "男";
		}else if(gender == 2){
			return "女";
		}

		return null;
	}


[]
	SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
